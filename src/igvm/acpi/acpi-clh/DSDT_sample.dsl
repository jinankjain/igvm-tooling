/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20190509 (64-bit version)
 * Copyright (c) 2000 - 2019 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of dsdt.dat, Mon Aug 14 13:38:10 2023
 *
 * Original Table Header:
 *     Signature        "DSDT"
 *     Length           0x000499DF (301535)
 *     Revision         0x06
 *     Checksum         0xE2
 *     OEM ID           "CLOUDH"
 *     OEM Table ID     "CHDSDT  "
 *     OEM Revision     0x00000001 (1)
 *     Compiler ID      "RVAT"
 *     Compiler Version 0x01000000 (16777216)
 */
DefinitionBlock ("", "DSDT", 6, "CLOUDH", "CHDSDT  ", 0x00000001)
{
    Device (_SB.PHPR)
    {
        Name (_HID, EisaId ("PNP0A06") /* Generic Container Device */)  // _HID: Hardware ID
        Name (_STA, 0x0B)  // _STA: Status
        Name (_UID, "PCI Hotplug Controller")  // _UID: Unique ID
        Mutex (BLCK, 0x00)
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000007FFFFFEF000, // Range Minimum
                0x000007FFFFFEF00F, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000000000000010, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        OperationRegion (PCST, SystemMemory, 0x000007FFFFFEF000, 0x10)
        Field (PCST, DWordAcc, NoLock, WriteAsZeros)
        {
            PCIU,   32, 
            PCID,   32, 
            B0EJ,   32, 
            PSEG,   32
        }

        Method (PCEJ, 2, Serialized)
        {
            Acquire (BLCK, 0xFFFF)
            PSEG = Arg1
            B0EJ = (One << Arg0)
            Release (BLCK)
            Return (Zero)
        }

        Method (PSCN, 0, Serialized)
        {
            \_SB.PC00.PCNT ()
            \_SB.PC01.PCNT ()
            \_SB.PC02.PCNT ()
            \_SB.PC03.PCNT ()
            \_SB.PC04.PCNT ()
            \_SB.PC05.PCNT ()
            \_SB.PC06.PCNT ()
            \_SB.PC07.PCNT ()
            \_SB.PC08.PCNT ()
            \_SB.PC09.PCNT ()
            \_SB.PC0A.PCNT ()
            \_SB.PC0B.PCNT ()
            \_SB.PC0C.PCNT ()
            \_SB.PC0D.PCNT ()
            \_SB.PC0E.PCNT ()
            \_SB.PC0F.PCNT ()
            \_SB.PC10.PCNT ()
            \_SB.PC11.PCNT ()
            \_SB.PC12.PCNT ()
            \_SB.PC13.PCNT ()
            \_SB.PC14.PCNT ()
            \_SB.PC15.PCNT ()
            \_SB.PC16.PCNT ()
            \_SB.PC17.PCNT ()
            \_SB.PC18.PCNT ()
            \_SB.PC19.PCNT ()
            \_SB.PC1A.PCNT ()
            \_SB.PC1B.PCNT ()
            \_SB.PC1C.PCNT ()
            \_SB.PC1D.PCNT ()
            \_SB.PC1E.PCNT ()
            \_SB.PC1F.PCNT ()
            \_SB.PC20.PCNT ()
            \_SB.PC21.PCNT ()
            \_SB.PC22.PCNT ()
            \_SB.PC23.PCNT ()
            \_SB.PC24.PCNT ()
            \_SB.PC25.PCNT ()
            \_SB.PC26.PCNT ()
            \_SB.PC27.PCNT ()
            \_SB.PC28.PCNT ()
            \_SB.PC29.PCNT ()
            \_SB.PC2A.PCNT ()
            \_SB.PC2B.PCNT ()
            \_SB.PC2C.PCNT ()
            \_SB.PC2D.PCNT ()
            \_SB.PC2E.PCNT ()
            \_SB.PC2F.PCNT ()
            \_SB.PC30.PCNT ()
            \_SB.PC31.PCNT ()
            \_SB.PC32.PCNT ()
            \_SB.PC33.PCNT ()
            \_SB.PC34.PCNT ()
            \_SB.PC35.PCNT ()
            \_SB.PC36.PCNT ()
            \_SB.PC37.PCNT ()
            \_SB.PC38.PCNT ()
            \_SB.PC39.PCNT ()
            \_SB.PC3A.PCNT ()
            \_SB.PC3B.PCNT ()
            \_SB.PC3C.PCNT ()
            \_SB.PC3D.PCNT ()
            \_SB.PC3E.PCNT ()
            \_SB.PC3F.PCNT ()
            \_SB.PC40.PCNT ()
            \_SB.PC41.PCNT ()
            \_SB.PC42.PCNT ()
            \_SB.PC43.PCNT ()
            \_SB.PC44.PCNT ()
            \_SB.PC45.PCNT ()
            \_SB.PC46.PCNT ()
            \_SB.PC47.PCNT ()
            \_SB.PC48.PCNT ()
            \_SB.PC49.PCNT ()
            \_SB.PC4A.PCNT ()
            \_SB.PC4B.PCNT ()
            \_SB.PC4C.PCNT ()
            \_SB.PC4D.PCNT ()
            \_SB.PC4E.PCNT ()
            \_SB.PC4F.PCNT ()
            \_SB.PC50.PCNT ()
            \_SB.PC51.PCNT ()
            \_SB.PC52.PCNT ()
            \_SB.PC53.PCNT ()
            \_SB.PC54.PCNT ()
            \_SB.PC55.PCNT ()
            \_SB.PC56.PCNT ()
            \_SB.PC57.PCNT ()
            \_SB.PC58.PCNT ()
            \_SB.PC59.PCNT ()
            \_SB.PC5A.PCNT ()
            \_SB.PC5B.PCNT ()
            \_SB.PC5C.PCNT ()
            \_SB.PC5D.PCNT ()
            \_SB.PC5E.PCNT ()
            \_SB.PC5F.PCNT ()
        }
    }

    Device (_SB.PC00)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, Zero)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            IO (Decode16,
                0x0CF8,             // Range Minimum
                0x0CF8,             // Range Maximum
                0x01,               // Alignment
                0x08,               // Length
                )
            DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x00000000,         // Granularity
                0xC0000000,         // Range Minimum
                0xE7FFFFFF,         // Range Maximum
                0x00000000,         // Translation Offset
                0x28000000,         // Length
                ,, , AddressRangeMemory, TypeStatic)
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000000840000000, // Range Minimum
                0x0000001D3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
            WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0CF7,             // Range Maximum
                0x0000,             // Translation Offset
                0x0CF8,             // Length
                ,, , TypeStatic, DenseTranslation)
            WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                0x0000,             // Granularity
                0x0D00,             // Range Minimum
                0xFFFF,             // Range Maximum
                0x0000,             // Translation Offset
                0xF300,             // Length
                ,, , TypeStatic, DenseTranslation)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC00._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC01)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, One)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8100000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000001D40000000, // Range Minimum
                0x000000323FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC01._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC02)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x02)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8200000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000003240000000, // Range Minimum
                0x000000473FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC02._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC03)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x03)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8300000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000004740000000, // Range Minimum
                0x0000005C3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC03._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC04)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x04)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8400000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000005C40000000, // Range Minimum
                0x000000713FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC04._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC05)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x05)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8500000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000007140000000, // Range Minimum
                0x000000863FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC05._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC06)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x06)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8600000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000008640000000, // Range Minimum
                0x0000009B3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC06._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC07)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x07)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8700000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000009B40000000, // Range Minimum
                0x000000B03FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC07._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC08)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x08)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8800000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000000B040000000, // Range Minimum
                0x000000C53FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC08._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC09)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x09)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8900000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000000C540000000, // Range Minimum
                0x000000DA3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC09._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC0A)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x0A)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8A00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000000DA40000000, // Range Minimum
                0x000000EF3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC0A._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC0B)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x0B)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8B00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000000EF40000000, // Range Minimum
                0x000001043FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC0B._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC0C)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x0C)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8C00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000010440000000, // Range Minimum
                0x000001193FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC0C._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC0D)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x0D)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8D00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000011940000000, // Range Minimum
                0x0000012E3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC0D._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC0E)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x0E)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8E00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000012E40000000, // Range Minimum
                0x000001433FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC0E._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC0F)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x0F)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE8F00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000014340000000, // Range Minimum
                0x000001583FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC0F._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC10)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x10)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9000000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000015840000000, // Range Minimum
                0x0000016D3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC10._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC11)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x11)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9100000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000016D40000000, // Range Minimum
                0x000001823FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC11._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC12)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x12)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9200000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000018240000000, // Range Minimum
                0x000001973FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC12._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC13)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x13)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9300000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000019740000000, // Range Minimum
                0x000001AC3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC13._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC14)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x14)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9400000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000001AC40000000, // Range Minimum
                0x000001C13FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC14._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC15)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x15)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9500000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000001C140000000, // Range Minimum
                0x000001D63FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC15._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC16)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x16)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9600000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000001D640000000, // Range Minimum
                0x000001EB3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC16._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC17)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x17)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9700000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000001EB40000000, // Range Minimum
                0x000002003FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC17._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC18)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x18)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9800000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000020040000000, // Range Minimum
                0x000002153FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC18._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC19)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x19)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9900000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000021540000000, // Range Minimum
                0x0000022A3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC19._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC1A)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x1A)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9A00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000022A40000000, // Range Minimum
                0x0000023F3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC1A._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC1B)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x1B)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9B00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000023F40000000, // Range Minimum
                0x000002543FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC1B._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC1C)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x1C)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9C00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000025440000000, // Range Minimum
                0x000002693FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC1C._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC1D)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x1D)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9D00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000026940000000, // Range Minimum
                0x000027E3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC1D._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC1E)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x1E)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9E00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000027E40000000, // Range Minimum
                0x000002933FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC1E._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC1F)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x1F)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xE9F00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000029340000000, // Range Minimum
                0x000002A83FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC1F._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC20)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x20)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA000000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000002A840000000, // Range Minimum
                0x000002BD3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC20._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC21)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x21)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA100000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000002BD40000000, // Range Minimum
                0x000002D23FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC21._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC22)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x22)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA200000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000002D240000000, // Range Minimum
                0x000002E73FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC22._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC23)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x23)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA300000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000002E740000000, // Range Minimum
                0x000002FC3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC23._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC24)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x24)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA400000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000002FC40000000, // Range Minimum
                0x000003113FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC24._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC25)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x25)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA500000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000031140000000, // Range Minimum
                0x000003263FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC25._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC26)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x26)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA600000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000032640000000, // Range Minimum
                0x0000033B3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC26._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC27)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x27)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA700000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000033B40000000, // Range Minimum
                0x000003503FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC27._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC28)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x28)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA800000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000035040000000, // Range Minimum
                0x000003653FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC28._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC29)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x29)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEA900000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000036540000000, // Range Minimum
                0x0000037A3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC29._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC2A)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x2A)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEAA00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000037A40000000, // Range Minimum
                0x0000038F3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC2A._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC2B)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x2B)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEAB00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000038F40000000, // Range Minimum
                0x000003A43FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC2B._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC2C)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x2C)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEAC00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000003A440000000, // Range Minimum
                0x000003B93FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC2C._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC2D)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x2D)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEAD00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000003B940000000, // Range Minimum
                0x000003CE3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC2D._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC2E)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x2E)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEAE00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000003CE40000000, // Range Minimum
                0x000003E33FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC2E._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC2F)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x2F)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEAF00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000003E340000000, // Range Minimum
                0x000003F83FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC2F._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC30)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x30)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB000000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000003F840000000, // Range Minimum
                0x0000040D3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC30._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC31)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x31)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB100000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000040D40000000, // Range Minimum
                0x000004223FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC31._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC32)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x32)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB200000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000042240000000, // Range Minimum
                0x000004373FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC32._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC33)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x33)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB300000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000043740000000, // Range Minimum
                0x0000044C3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC33._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC34)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x34)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB400000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000044C40000000, // Range Minimum
                0x000004613FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC34._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC35)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x35)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB500000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000046140000000, // Range Minimum
                0x000004763FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC35._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC36)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x36)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB600000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000047640000000, // Range Minimum
                0x0000048B3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC36._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC37)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x37)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB700000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000048B40000000, // Range Minimum
                0x000004A03FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC37._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC38)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x38)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB800000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000004A040000000, // Range Minimum
                0x000004B53FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC38._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC39)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x39)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEB900000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000004B540000000, // Range Minimum
                0x000004CA3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC39._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC3A)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x3A)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEBA00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000004CA40000000, // Range Minimum
                0x000004DF3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC3A._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC3B)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x3B)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEBB00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000004DF40000000, // Range Minimum
                0x000004F43FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC3B._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC3C)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x3C)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEBC00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000004F440000000, // Range Minimum
                0x000005093FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC3C._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC3D)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x3D)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEBD00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000050940000000, // Range Minimum
                0x0000051E3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC3D._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC3E)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x3E)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEBE00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000051E40000000, // Range Minimum
                0x000005333FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC3E._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC3F)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x3F)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEBF00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000053340000000, // Range Minimum
                0x000005483FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC3F._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC40)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x40)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC000000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000054840000000, // Range Minimum
                0x0000055D3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC40._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC41)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x41)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC100000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000055D40000000, // Range Minimum
                0x000005723FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC41._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC42)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x42)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC200000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000057240000000, // Range Minimum
                0x000005873FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC42._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC43)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x43)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC300000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000058740000000, // Range Minimum
                0x0000059C3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC43._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC44)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x44)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC400000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000059C40000000, // Range Minimum
                0x000005B13FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC44._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC45)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x45)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC500000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000005B140000000, // Range Minimum
                0x000005C63FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC45._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC46)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x46)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC600000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000005C640000000, // Range Minimum
                0x000005DB3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC46._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC47)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x47)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC700000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000005DB40000000, // Range Minimum
                0x000005F03FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC47._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC48)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x48)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC800000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000005F040000000, // Range Minimum
                0x000006053FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC48._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC49)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x49)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEC900000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000060540000000, // Range Minimum
                0x0000061A3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC49._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC4A)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x4A)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xECA00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000061A40000000, // Range Minimum
                0x0000062F3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC4A._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC4B)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x4B)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xECB00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000062F40000000, // Range Minimum
                0x000006443FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC4B._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC4C)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x4C)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xECC00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000064440000000, // Range Minimum
                0x000006593FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC4C._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC4D)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x4D)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xECD00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000065940000000, // Range Minimum
                0x0000066E3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC4D._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC4E)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x4E)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xECE00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000066E40000000, // Range Minimum
                0x000006833FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC4E._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC4F)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x4F)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xECF00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000068340000000, // Range Minimum
                0x000006983FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC4F._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC50)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x50)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED000000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000069840000000, // Range Minimum
                0x000006AD3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC50._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC51)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x51)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED100000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000006AD40000000, // Range Minimum
                0x000006C23FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC51._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC52)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x52)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED200000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000006C240000000, // Range Minimum
                0x000006D73FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC52._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC53)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x53)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED300000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000006D740000000, // Range Minimum
                0x000006EC3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC53._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC54)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x54)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED400000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000006EC40000000, // Range Minimum
                0x000007013FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC54._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC55)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x55)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED500000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000070140000000, // Range Minimum
                0x000007163FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC55._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC56)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x56)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED600000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000071640000000, // Range Minimum
                0x0000072B3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC56._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC57)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x57)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED700000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000072B40000000, // Range Minimum
                0x000007403FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC57._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC58)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x58)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED800000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000074040000000, // Range Minimum
                0x000007553FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC58._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC59)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x59)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xED900000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000075540000000, // Range Minimum
                0x0000076A3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC59._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC5A)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x5A)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEDA00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000076A40000000, // Range Minimum
                0x0000077F3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC5A._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC5B)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x5B)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEDB00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000077F40000000, // Range Minimum
                0x000007943FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC5B._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC5C)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x5C)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEDC00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x0000079440000000, // Range Minimum
                0x000007A93FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC5C._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC5D)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x5D)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEDD00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000007A940000000, // Range Minimum
                0x000007BE3FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC5D._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC5E)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x5E)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEDE00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000007BE40000000, // Range Minimum
                0x000007D33FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC5E._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.PC5F)
    {
        Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
        Name (_ADR, Zero)  // _ADR: Address
        Name (_SEG, 0x5F)  // _SEG: PCI Segment
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CCA, One)  // _CCA: Cache Coherency Attribute
        Name (SUPP, Zero)
        Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
        {
            Return (Zero)
        }

        Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
        {
            If ((Arg0 == ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {
                If ((Arg2 == Zero))
                {
                    Return (Buffer (One)
                    {
                         0x21                                             // !
                    })
                }

                If ((Arg2 == 0x05))
                {
                    Return (Zero)
                }
            }

            Return (Buffer (One)
            {
                 0x00                                             // .
            })
        }

        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                0x0000,             // Granularity
                0x0000,             // Range Minimum
                0x0000,             // Range Maximum
                0x0000,             // Translation Offset
                0x0001,             // Length
                ,, )
            Memory32Fixed (ReadWrite,
                0xEDF00000,         // Address Base
                0x00100000,         // Address Length
                )
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000007D340000000, // Range Minimum
                0x000007E83FFFFFFF, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000001500000000, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        Device (S000)
        {
            Name (_SUN, Zero)  // _SUN: Slot User Number
            Name (_ADR, Zero)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S001)
        {
            Name (_SUN, One)  // _SUN: Slot User Number
            Name (_ADR, 0x00010000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S002)
        {
            Name (_SUN, 0x02)  // _SUN: Slot User Number
            Name (_ADR, 0x00020000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S003)
        {
            Name (_SUN, 0x03)  // _SUN: Slot User Number
            Name (_ADR, 0x00030000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S004)
        {
            Name (_SUN, 0x04)  // _SUN: Slot User Number
            Name (_ADR, 0x00040000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S005)
        {
            Name (_SUN, 0x05)  // _SUN: Slot User Number
            Name (_ADR, 0x00050000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S006)
        {
            Name (_SUN, 0x06)  // _SUN: Slot User Number
            Name (_ADR, 0x00060000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S007)
        {
            Name (_SUN, 0x07)  // _SUN: Slot User Number
            Name (_ADR, 0x00070000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S008)
        {
            Name (_SUN, 0x08)  // _SUN: Slot User Number
            Name (_ADR, 0x00080000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S009)
        {
            Name (_SUN, 0x09)  // _SUN: Slot User Number
            Name (_ADR, 0x00090000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S010)
        {
            Name (_SUN, 0x0A)  // _SUN: Slot User Number
            Name (_ADR, 0x000A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S011)
        {
            Name (_SUN, 0x0B)  // _SUN: Slot User Number
            Name (_ADR, 0x000B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S012)
        {
            Name (_SUN, 0x0C)  // _SUN: Slot User Number
            Name (_ADR, 0x000C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S013)
        {
            Name (_SUN, 0x0D)  // _SUN: Slot User Number
            Name (_ADR, 0x000D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S014)
        {
            Name (_SUN, 0x0E)  // _SUN: Slot User Number
            Name (_ADR, 0x000E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S015)
        {
            Name (_SUN, 0x0F)  // _SUN: Slot User Number
            Name (_ADR, 0x000F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S016)
        {
            Name (_SUN, 0x10)  // _SUN: Slot User Number
            Name (_ADR, 0x00100000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S017)
        {
            Name (_SUN, 0x11)  // _SUN: Slot User Number
            Name (_ADR, 0x00110000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S018)
        {
            Name (_SUN, 0x12)  // _SUN: Slot User Number
            Name (_ADR, 0x00120000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S019)
        {
            Name (_SUN, 0x13)  // _SUN: Slot User Number
            Name (_ADR, 0x00130000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S020)
        {
            Name (_SUN, 0x14)  // _SUN: Slot User Number
            Name (_ADR, 0x00140000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S021)
        {
            Name (_SUN, 0x15)  // _SUN: Slot User Number
            Name (_ADR, 0x00150000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S022)
        {
            Name (_SUN, 0x16)  // _SUN: Slot User Number
            Name (_ADR, 0x00160000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S023)
        {
            Name (_SUN, 0x17)  // _SUN: Slot User Number
            Name (_ADR, 0x00170000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S024)
        {
            Name (_SUN, 0x18)  // _SUN: Slot User Number
            Name (_ADR, 0x00180000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S025)
        {
            Name (_SUN, 0x19)  // _SUN: Slot User Number
            Name (_ADR, 0x00190000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S026)
        {
            Name (_SUN, 0x1A)  // _SUN: Slot User Number
            Name (_ADR, 0x001A0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S027)
        {
            Name (_SUN, 0x1B)  // _SUN: Slot User Number
            Name (_ADR, 0x001B0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S028)
        {
            Name (_SUN, 0x1C)  // _SUN: Slot User Number
            Name (_ADR, 0x001C0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S029)
        {
            Name (_SUN, 0x1D)  // _SUN: Slot User Number
            Name (_ADR, 0x001D0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S030)
        {
            Name (_SUN, 0x1E)  // _SUN: Slot User Number
            Name (_ADR, 0x001E0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Device (S031)
        {
            Name (_SUN, 0x1F)  // _SUN: Slot User Number
            Name (_ADR, 0x001F0000)  // _ADR: Address
            Method (_EJ0, 1, Serialized)  // _EJx: Eject Device, x=0-9
            {
                \_SB.PHPR.PCEJ (_SUN, _SEG)
            }
        }

        Method (DVNT, 2, Serialized)
        {
            Local0 = (Arg0 & One)
            If ((Local0 == One))
            {
                Notify (S000, Arg1)
            }

            Local0 = (Arg0 & 0x02)
            If ((Local0 == 0x02))
            {
                Notify (S001, Arg1)
            }

            Local0 = (Arg0 & 0x04)
            If ((Local0 == 0x04))
            {
                Notify (S002, Arg1)
            }

            Local0 = (Arg0 & 0x08)
            If ((Local0 == 0x08))
            {
                Notify (S003, Arg1)
            }

            Local0 = (Arg0 & 0x10)
            If ((Local0 == 0x10))
            {
                Notify (S004, Arg1)
            }

            Local0 = (Arg0 & 0x20)
            If ((Local0 == 0x20))
            {
                Notify (S005, Arg1)
            }

            Local0 = (Arg0 & 0x40)
            If ((Local0 == 0x40))
            {
                Notify (S006, Arg1)
            }

            Local0 = (Arg0 & 0x80)
            If ((Local0 == 0x80))
            {
                Notify (S007, Arg1)
            }

            Local0 = (Arg0 & 0x0100)
            If ((Local0 == 0x0100))
            {
                Notify (S008, Arg1)
            }

            Local0 = (Arg0 & 0x0200)
            If ((Local0 == 0x0200))
            {
                Notify (S009, Arg1)
            }

            Local0 = (Arg0 & 0x0400)
            If ((Local0 == 0x0400))
            {
                Notify (S010, Arg1)
            }

            Local0 = (Arg0 & 0x0800)
            If ((Local0 == 0x0800))
            {
                Notify (S011, Arg1)
            }

            Local0 = (Arg0 & 0x1000)
            If ((Local0 == 0x1000))
            {
                Notify (S012, Arg1)
            }

            Local0 = (Arg0 & 0x2000)
            If ((Local0 == 0x2000))
            {
                Notify (S013, Arg1)
            }

            Local0 = (Arg0 & 0x4000)
            If ((Local0 == 0x4000))
            {
                Notify (S014, Arg1)
            }

            Local0 = (Arg0 & 0x8000)
            If ((Local0 == 0x8000))
            {
                Notify (S015, Arg1)
            }

            Local0 = (Arg0 & 0x00010000)
            If ((Local0 == 0x00010000))
            {
                Notify (S016, Arg1)
            }

            Local0 = (Arg0 & 0x00020000)
            If ((Local0 == 0x00020000))
            {
                Notify (S017, Arg1)
            }

            Local0 = (Arg0 & 0x00040000)
            If ((Local0 == 0x00040000))
            {
                Notify (S018, Arg1)
            }

            Local0 = (Arg0 & 0x00080000)
            If ((Local0 == 0x00080000))
            {
                Notify (S019, Arg1)
            }

            Local0 = (Arg0 & 0x00100000)
            If ((Local0 == 0x00100000))
            {
                Notify (S020, Arg1)
            }

            Local0 = (Arg0 & 0x00200000)
            If ((Local0 == 0x00200000))
            {
                Notify (S021, Arg1)
            }

            Local0 = (Arg0 & 0x00400000)
            If ((Local0 == 0x00400000))
            {
                Notify (S022, Arg1)
            }

            Local0 = (Arg0 & 0x00800000)
            If ((Local0 == 0x00800000))
            {
                Notify (S023, Arg1)
            }

            Local0 = (Arg0 & 0x01000000)
            If ((Local0 == 0x01000000))
            {
                Notify (S024, Arg1)
            }

            Local0 = (Arg0 & 0x02000000)
            If ((Local0 == 0x02000000))
            {
                Notify (S025, Arg1)
            }

            Local0 = (Arg0 & 0x04000000)
            If ((Local0 == 0x04000000))
            {
                Notify (S026, Arg1)
            }

            Local0 = (Arg0 & 0x08000000)
            If ((Local0 == 0x08000000))
            {
                Notify (S027, Arg1)
            }

            Local0 = (Arg0 & 0x10000000)
            If ((Local0 == 0x10000000))
            {
                Notify (S028, Arg1)
            }

            Local0 = (Arg0 & 0x20000000)
            If ((Local0 == 0x20000000))
            {
                Notify (S029, Arg1)
            }

            Local0 = (Arg0 & 0x40000000)
            If ((Local0 == 0x40000000))
            {
                Notify (S030, Arg1)
            }

            Local0 = (Arg0 & 0x80000000)
            If ((Local0 == 0x80000000))
            {
                Notify (S031, Arg1)
            }
        }

        Method (PCNT, 0, Serialized)
        {
            Acquire (\_SB.PHPR.BLCK, 0xFFFF)
            \_SB.PHPR.PSEG = _SEG /* \_SB_.PC5F._SEG */
            DVNT (\_SB.PHPR.PCIU, One)
            DVNT (\_SB.PHPR.PCID, 0x03)
            Release (\_SB.PHPR.BLCK)
        }

        Name (_PRT, Package (0x20)  // _PRT: PCI Routing Table
        {
            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0006FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0007FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0009FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x000AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x000BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x000CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x000DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x000EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x000FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0010FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0011FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x0012FFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x0C
            }, 

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x05
            }, 

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x06
            }, 

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x07
            }, 

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x08
            }, 

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x09
            }, 

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x0A
            }, 

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x0B
            }, 

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x0C
            }
        })
    }

    Device (_SB.MBRD)
    {
        Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            Memory32Fixed (ReadWrite,
                0xE8000000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8100000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8200000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8300000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8400000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8500000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8600000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8700000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8800000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8900000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8A00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8B00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8C00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8D00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8E00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE8F00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9000000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9100000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9200000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9300000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9400000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9500000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9600000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9700000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9800000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9900000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9A00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9B00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9C00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9D00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9E00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xE9F00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA000000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA100000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA200000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA300000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA400000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA500000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA600000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA700000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA800000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEA900000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEAA00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEAB00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEAC00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEAD00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEAE00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEAF00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB000000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB100000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB200000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB300000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB400000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB500000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB600000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB700000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB800000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEB900000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEBA00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEBB00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEBC00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEBD00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEBE00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEBF00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC000000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC100000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC200000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC300000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC400000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC500000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC600000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC700000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC800000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEC900000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xECA00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xECB00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xECC00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xECD00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xECE00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xECF00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED000000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED100000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED200000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED300000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED400000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED500000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED600000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED700000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED800000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xED900000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEDA00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEDB00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEDC00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEDD00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEDE00000,         // Address Base
                0x00100000,         // Address Length
                )
            Memory32Fixed (ReadWrite,
                0xEDF00000,         // Address Base
                0x00100000,         // Address Length
                )
        })
    }

    Device (_SB.COM1)
    {
        Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_DDN, "COM1")  // _DDN: DOS Device Name
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
            {
                0x00000004,
            }
            IO (Decode16,
                0x03F8,             // Range Minimum
                0x03F8,             // Range Maximum
                0x00,               // Alignment
                0x08,               // Length
                )
        })
    }

    Name (_S5, Package (0x01)  // _S5_: S5 System State
    {
        0x05
    })
    Device (_SB.PWRB)
    {
        Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
    }

    Device (_SB.GEC)
    {
        Name (_HID, EisaId ("PNP0A06") /* Generic Container Device */)  // _HID: Hardware ID
        Name (_UID, "Generic Event Controller")  // _UID: Unique ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x000007FFFFFED000, // Range Minimum
                0x000007FFFFFED000, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x0000000000000001, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        OperationRegion (GDST, SystemMemory, 0x000007FFFFFED000, One)
        Field (GDST, ByteAcc, NoLock, WriteAsZeros)
        {
            GDAT,   8
        }

        Method (ESCN, 0, Serialized)
        {
            Local0 = GDAT /* \_SB_.GEC_.GDAT */
            Local1 = (Local0 & One)
            If ((Local1 == One))
            {
                \_SB.CPUS.CSCN ()
            }

            Local1 = (Local0 & 0x02)
            If ((Local1 == 0x02))
            {
                \_SB.MHPC.MSCN ()
            }

            Local1 = (Local0 & 0x04)
            If ((Local1 == 0x04))
            {
                \_SB.PHPR.PSCN ()
            }

            Local1 = (Local0 & 0x08)
            If ((Local1 == 0x08))
            {
                Notify (\_SB.PWRB, 0x80) // Status Change
            }
        }
    }

    Device (_SB.GED)
    {
        Name (_HID, "ACPI0013" /* Generic Event Device */)  // _HID: Hardware ID
        Name (_UID, Zero)  // _UID: Unique ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
            {
                0x0000000D,
            }
        })
        Method (_EVT, 1, Serialized)  // _EVT: Event
        {
            \_SB.GEC.ESCN ()
        }
    }

    Device (_SB.PRES)
    {
        Name (_HID, EisaId ("PNP0A06") /* Generic Container Device */)  // _HID: Hardware ID
        Name (_UID, "CPU Hotplug Controller")  // _UID: Unique ID
        Mutex (CPLK, 0x00)
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                0x0000000000000000, // Granularity
                0x00003FFFFFFEE000, // Range Minimum
                0x00003FFFFFFEE00B, // Range Maximum
                0x0000000000000000, // Translation Offset
                0x000000000000000C, // Length
                ,, , AddressRangeMemory, TypeStatic)
        })
        OperationRegion (PRST, SystemMemory, 0x00003FFFFFFEE000, 0x0C)
        Field (PRST, ByteAcc, NoLock, WriteAsZeros)
        {
            Offset (0x04), 
            CPEN,   1, 
            CINS,   1, 
            CRMV,   1, 
            CEJ0,   1, 
            Offset (0x05), 
            CCMD,   8
        }

        Field (PRST, DWordAcc, NoLock, Preserve)
        {
            CSEL,   32, 
            Offset (0x08), 
            CDAT,   32
        }
    }

    Device (_SB.CPUS)
    {
        Name (_HID, "ACPI0010" /* Processor Container Device */)  // _HID: Hardware ID
        Name (_CID, EisaId ("PNP0A05") /* Generic Container Device */)  // _CID: Compatible ID
        Method (CSTA, 1, Serialized)
        {
            Acquire (\_SB.PRES.CPLK, 0xFFFF)
            \_SB.PRES.CSEL = Arg0
            Local0 = Zero
            If ((\_SB.PRES.CPEN == One))
            {
                Local0 = 0x0F
            }

            Release (\_SB.PRES.CPLK)
            Return (Local0)
        }

        Method (CTFY, 2, Serialized)
        {
            If ((Arg0 == Zero))
            {
                Notify (C000, Arg1)
            }

            If ((Arg0 == One))
            {
                Notify (C001, Arg1)
            }

            If ((Arg0 == 0x02))
            {
                Notify (C002, Arg1)
            }

            If ((Arg0 == 0x03))
            {
                Notify (C003, Arg1)
            }

            If ((Arg0 == 0x04))
            {
                Notify (C004, Arg1)
            }

            If ((Arg0 == 0x05))
            {
                Notify (C005, Arg1)
            }
        }

        Method (CEJ0, 1, Serialized)
        {
            Acquire (\_SB.PRES.CPLK, 0xFFFF)
            \_SB.PRES.CSEL = Arg0
            \_SB.PRES.CEJ0 = One
            Release (\_SB.PRES.CPLK)
        }

        Method (CSCN, 0, Serialized)
        {
            Acquire (\_SB.PRES.CPLK, 0xFFFF)
            Local0 = Zero
            While ((Local0 < 0x06))
            {
                \_SB.PRES.CSEL = Local0
                If ((\_SB.PRES.CINS == One))
                {
                    CTFY (Local0, One)
                    \_SB.PRES.CINS = One
                }

                If ((\_SB.PRES.CRMV == One))
                {
                    CTFY (Local0, 0x03)
                    \_SB.PRES.CRMV = One
                }

                Local0 += One
            }

            Release (\_SB.PRES.CPLK)
        }

        Device (C000)
        {
            Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
            Name (_UID, Zero)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (CSTA (Zero))
            }

            Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
            {
                Return (Zero)
            }

            Name (_MAT, Buffer (0x10)  // _MAT: Multiple APIC Table Entry
            {
                /* 0000 */  0x09, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            })
            Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
            {
                CEJ0 (Zero)
            }
        }

        Device (C001)
        {
            Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
            Name (_UID, One)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (CSTA (One))
            }

            Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
            {
                Return (Zero)
            }

            Name (_MAT, Buffer (0x10)  // _MAT: Multiple APIC Table Entry
            {
                /* 0000 */  0x09, 0x10, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00   // ........
            })
            Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
            {
                CEJ0 (One)
            }
        }

        Device (C002)
        {
            Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
            Name (_UID, 0x02)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (CSTA (0x02))
            }

            Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
            {
                Return (Zero)
            }

            Name (_MAT, Buffer (0x10)  // _MAT: Multiple APIC Table Entry
            {
                /* 0000 */  0x09, 0x10, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00   // ........
            })
            Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
            {
                CEJ0 (0x02)
            }
        }

        Device (C003)
        {
            Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
            Name (_UID, 0x03)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (CSTA (0x03))
            }

            Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
            {
                Return (Zero)
            }

            Name (_MAT, Buffer (0x10)  // _MAT: Multiple APIC Table Entry
            {
                /* 0000 */  0x09, 0x10, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00   // ........
            })
            Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
            {
                CEJ0 (0x03)
            }
        }

        Device (C004)
        {
            Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
            Name (_UID, 0x04)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (CSTA (0x04))
            }

            Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
            {
                Return (Zero)
            }

            Name (_MAT, Buffer (0x10)  // _MAT: Multiple APIC Table Entry
            {
                /* 0000 */  0x09, 0x10, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00   // ........
            })
            Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
            {
                CEJ0 (0x04)
            }
        }

        Device (C005)
        {
            Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
            Name (_UID, 0x05)  // _UID: Unique ID
            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                Return (CSTA (0x05))
            }

            Method (_PXM, 0, NotSerialized)  // _PXM: Device Proximity
            {
                Return (Zero)
            }

            Name (_MAT, Buffer (0x10)  // _MAT: Multiple APIC Table Entry
            {
                /* 0000 */  0x09, 0x10, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00   // ........
            })
            Method (_EJ0, 1, NotSerialized)  // _EJx: Eject Device, x=0-9
            {
                CEJ0 (0x05)
            }
        }
    }

    Device (_SB.MHPC)
    {
        Name (_HID, EisaId ("PNP0A06") /* Generic Container Device */)  // _HID: Hardware ID
        Name (_UID, "Memory Hotplug Controller")  // _UID: Unique ID
        Method (MSCN, 0, Serialized)
        {
        }
    }
}

